@page "/authors/"
@attribute [Authorize]
@inject IAuthorRepository _repo
<h3 class="card-title">Authors</h3>
<br />
@if (Model == null)
{
<LoadingMessage Message="Loading Authors" />
 }
else
{

@if (Model.Count < 1)
{
<LoadingMessage Message="There are no authors in the data store.
                        Click 'Create New' to Begin " />
 }
else
{
<table class="table table-responsive">
    <thead>
        <tr>
            <th>First Name</th>
            <th>Last Name</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var author in Model)
        {
<tr>
    <td>@author.FirstName</td>
    <td>@author.LastName</td>
    <td>
        <a href="/authors/view/@author.Id" class="btn btn-outline-primary">
            <span class="oi oi-book"></span>
        </a>
        <AuthorizeView Roles="Administrator">
            <a href="/authors/edit/@author.Id" class="btn btn-outline-warning">
                <span class="oi oi-pencil"></span>
            </a>
            <a href="/authors/delete/@author.Id" class="btn btn-outline-danger">
                <span class="oi oi-delete"></span>
            </a>
        </AuthorizeView>
    </td>
</tr>
}
    </tbody>
</table>}
                <AuthorizeView Roles="Administrator">
                    <hr />
                    <a href="/authors/create" class="btn btn-outline-primary">
                        <span class="oi oi-plus"></span>
                        Create New
                    </a>
                    <br />
                </AuthorizeView>}

@code { private IList<Author> Model;

    protected async override Task OnInitializedAsync()
    {
        Model = await _repo.Get(Endpoints.AuthorsEndpoint);

    } }
